{"ast":null,"code":"var _jsxFileName = \"/Users/andrewmaclean/BackyardFriends/mountains/src/Components/Mapping/ReactMap.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport Map, { GeolocateControl, Layer, Marker, NavigationControl, Source } from 'react-map-gl';\nimport { SkierIcon } from '../../Images';\nimport { CARD_STATES, useAdventureEditContext, useCardStateContext, useGetAdventures } from '../../Providers';\nimport MapPopup from './MapPopup';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst skyLayer = {\n  id: 'sky',\n  type: 'sky',\n  paint: {\n    'sky-type': 'atmosphere',\n    'sky-atmosphere-sun': [0.0, 0.0],\n    'sky-atmosphere-sun-intensity': 15\n  }\n};\n\nconst ReactMap = () => {\n  _s();\n\n  const mapRef = useRef();\n  const getlocateControlRef = useCallback(ref => {\n    if (ref) ref.trigger();\n  }, []);\n  const {\n    openCard\n  } = useCardStateContext();\n  const {\n    adventureAddState,\n    setAdventureAddState,\n    setCurrentAdventure,\n    allAdventures,\n    setAllAdventures,\n    setIsEditable,\n    mapboxToken,\n    viewState\n  } = useAdventureEditContext();\n  const {\n    refetchAdventures,\n    getAllAdventures\n  } = useGetAdventures();\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const onDblClick = e => {\n    e.preventDefault();\n\n    if (!adventureAddState) {\n      return;\n    }\n\n    const newAdventure = {\n      id: 'waiting',\n      adventure_name: 'New Adventure',\n      images: [],\n      coordinates: {\n        lng: e.lngLat.lng,\n        lat: e.lngLat.lat\n      }\n    };\n    setAllAdventures(currentAdventures => {\n      return [...currentAdventures, newAdventure];\n    });\n    setCurrentAdventure(newAdventure);\n    openCard(CARD_STATES.adventures);\n    setIsEditable(true);\n    setAdventureAddState(false);\n  };\n\n  const loadMap = e => {\n    getAllAdventures(mapRef.current.getMap().getBounds());\n  };\n\n  const onMove = useCallback(e => {\n    setViewState(e.viewState);\n    refetchAdventures({\n      lat: e.viewState.latitude,\n      lng: e.viewState.longitude,\n      zoom: e.viewState.zoom\n    }, mapRef.current.getMap().getBounds());\n  }, []);\n  /**\n   * zoom 20 is about 200' (* 50)\n   * zoom 15 is about 10,000' (* 50)\n   * zoom 10 is about 300,000' (* 50)\n   * zoom 5 is about 7,000,000' (* 50) (1 / x^2) * 100000\n   */\n\n  const viewMore = () => {\n    setCurrentAdventure(popupInfo);\n    setPopupInfo(null);\n    openCard(CARD_STATES.adventures);\n  };\n\n  const pins = useMemo(() => {\n    return allAdventures && allAdventures.map((adventure, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      longitude: adventure.coordinates.lng,\n      latitude: adventure.coordinates.lat,\n      anchor: \"bottom\",\n      onClick: e => {\n        e.originalEvent.stopPropagation();\n        setPopupInfo(adventure);\n      },\n      children: /*#__PURE__*/_jsxDEV(SkierIcon, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this)\n    }, `marker-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this));\n  }, [allAdventures]);\n\n  if (!allAdventures) {\n    return null;\n  }\n\n  if (!mapboxToken) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    ref: mapRef,\n    reuseMaps: true,\n    className: \"map-container\",\n    mapboxAccessToken: mapboxToken,\n    mapStyle: \"mapbox://styles/mapbox/satellite-v9\",\n    ...viewState,\n    maxPitch: 85,\n    onDblClick: onDblClick,\n    onLoad: loadMap,\n    onMove: onMove,\n    terrain: {\n      source: 'mapbox-dem',\n      exaggeration: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavigationControl, {\n      showCompass: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n      ref: getlocateControlRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Source, {\n      id: \"mapbox-dem\",\n      type: \"raster-dem\",\n      url: \"mapbox://mapbox.mapbox-terrain-dem-v1\",\n      tileSize: 512,\n      maxZoom: 14\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layer, { ...skyLayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this), pins, popupInfo && /*#__PURE__*/_jsxDEV(MapPopup, {\n      popupInfo: popupInfo,\n      viewMore: viewMore,\n      setPopupInfo: setPopupInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReactMap, \"/zWUEFG+G1zb1R2It/XbDfP+/7k=\", false, function () {\n  return [useCardStateContext, useAdventureEditContext, useGetAdventures];\n});\n\n_c = ReactMap;\nexport default ReactMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactMap\");","map":{"version":3,"names":["useCallback","useMemo","useRef","useState","Map","GeolocateControl","Layer","Marker","NavigationControl","Source","SkierIcon","CARD_STATES","useAdventureEditContext","useCardStateContext","useGetAdventures","MapPopup","skyLayer","id","type","paint","ReactMap","mapRef","getlocateControlRef","ref","trigger","openCard","adventureAddState","setAdventureAddState","setCurrentAdventure","allAdventures","setAllAdventures","setIsEditable","mapboxToken","viewState","refetchAdventures","getAllAdventures","popupInfo","setPopupInfo","onDblClick","e","preventDefault","newAdventure","adventure_name","images","coordinates","lng","lngLat","lat","currentAdventures","adventures","loadMap","current","getMap","getBounds","onMove","setViewState","latitude","longitude","zoom","viewMore","pins","map","adventure","idx","originalEvent","stopPropagation","source","exaggeration"],"sources":["/Users/andrewmaclean/BackyardFriends/mountains/src/Components/Mapping/ReactMap.js"],"sourcesContent":["import { useCallback, useMemo, useRef, useState } from 'react'\nimport Map, { GeolocateControl, Layer, Marker, NavigationControl, Source } from 'react-map-gl'\n\nimport { SkierIcon } from '../../Images'\nimport {\n\tCARD_STATES,\n\tuseAdventureEditContext,\n\tuseCardStateContext,\n\tuseGetAdventures\n} from '../../Providers'\nimport MapPopup from './MapPopup'\n\nimport '../../App.css'\n\nconst skyLayer = {\n\tid: 'sky',\n\ttype: 'sky',\n\tpaint: {\n\t\t'sky-type': 'atmosphere',\n\t\t'sky-atmosphere-sun': [0.0, 0.0],\n\t\t'sky-atmosphere-sun-intensity': 15\n\t}\n}\n\nconst ReactMap = () => {\n\tconst mapRef = useRef()\n\tconst getlocateControlRef = useCallback((ref) => {\n\t\tif (ref) ref.trigger()\n\t}, [])\n\n\tconst { openCard } = useCardStateContext()\n\tconst {\n\t\tadventureAddState,\n\t\tsetAdventureAddState,\n\t\tsetCurrentAdventure,\n\t\tallAdventures,\n\t\tsetAllAdventures,\n\t\tsetIsEditable,\n\t\tmapboxToken,\n\t\tviewState\n\t} = useAdventureEditContext()\n\tconst { refetchAdventures, getAllAdventures } = useGetAdventures()\n\n\tconst [popupInfo, setPopupInfo] = useState(null)\n\n\tconst onDblClick = (e) => {\n\t\te.preventDefault()\n\n\t\tif (!adventureAddState) {\n\t\t\treturn\n\t\t}\n\n\t\tconst newAdventure = {\n\t\t\tid: 'waiting',\n\t\t\tadventure_name: 'New Adventure',\n\t\t\timages: [],\n\t\t\tcoordinates: {\n\t\t\t\tlng: e.lngLat.lng,\n\t\t\t\tlat: e.lngLat.lat\n\t\t\t}\n\t\t}\n\n\t\tsetAllAdventures((currentAdventures) => {\n\t\t\treturn [...currentAdventures, newAdventure]\n\t\t})\n\n\t\tsetCurrentAdventure(newAdventure)\n\n\t\topenCard(CARD_STATES.adventures)\n\t\tsetIsEditable(true)\n\t\tsetAdventureAddState(false)\n\t}\n\n\tconst loadMap = (e) => {\n\t\tgetAllAdventures(mapRef.current.getMap().getBounds())\n\t}\n\n\tconst onMove = useCallback((e) => {\n\t\tsetViewState(e.viewState)\n\t\trefetchAdventures(\n\t\t\t{\n\t\t\t\tlat: e.viewState.latitude,\n\t\t\t\tlng: e.viewState.longitude,\n\t\t\t\tzoom: e.viewState.zoom\n\t\t\t},\n\t\t\tmapRef.current.getMap().getBounds()\n\t\t)\n\t}, [])\n\n\t/**\n\t * zoom 20 is about 200' (* 50)\n\t * zoom 15 is about 10,000' (* 50)\n\t * zoom 10 is about 300,000' (* 50)\n\t * zoom 5 is about 7,000,000' (* 50) (1 / x^2) * 100000\n\t */\n\n\tconst viewMore = () => {\n\t\tsetCurrentAdventure(popupInfo)\n\t\tsetPopupInfo(null)\n\t\topenCard(CARD_STATES.adventures)\n\t}\n\n\tconst pins = useMemo(() => {\n\t\treturn (\n\t\t\tallAdventures &&\n\t\t\tallAdventures.map((adventure, idx) => (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={`marker-${idx}`}\n\t\t\t\t\tlongitude={adventure.coordinates.lng}\n\t\t\t\t\tlatitude={adventure.coordinates.lat}\n\t\t\t\t\tanchor='bottom'\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.originalEvent.stopPropagation()\n\t\t\t\t\t\tsetPopupInfo(adventure)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<SkierIcon size={20} />\n\t\t\t\t</Marker>\n\t\t\t))\n\t\t)\n\t}, [allAdventures])\n\n\tif (!allAdventures) {\n\t\treturn null\n\t}\n\n\tif (!mapboxToken) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<Map\n\t\t\tref={mapRef}\n\t\t\treuseMaps\n\t\t\tclassName='map-container'\n\t\t\tmapboxAccessToken={mapboxToken}\n\t\t\tmapStyle='mapbox://styles/mapbox/satellite-v9'\n\t\t\t{...viewState}\n\t\t\tmaxPitch={85}\n\t\t\tonDblClick={onDblClick}\n\t\t\tonLoad={loadMap}\n\t\t\tonMove={onMove}\n\t\t\tterrain={{ source: 'mapbox-dem', exaggeration: 1 }}\n\t\t>\n\t\t\t<NavigationControl showCompass />\n\t\t\t<GeolocateControl ref={getlocateControlRef} />\n\t\t\t<Source\n\t\t\t\tid='mapbox-dem'\n\t\t\t\ttype='raster-dem'\n\t\t\t\turl='mapbox://mapbox.mapbox-terrain-dem-v1'\n\t\t\t\ttileSize={512}\n\t\t\t\tmaxZoom={14}\n\t\t\t/>\n\t\t\t<Layer {...skyLayer} />\n\t\t\t{pins}\n\n\t\t\t{popupInfo && (\n\t\t\t\t<MapPopup\n\t\t\t\t\tpopupInfo={popupInfo}\n\t\t\t\t\tviewMore={viewMore}\n\t\t\t\t\tsetPopupInfo={setPopupInfo}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Map>\n\t)\n}\n\nexport default ReactMap\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}