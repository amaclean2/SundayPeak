{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { debounce, throttle } from 'throttle-debounce';\nimport { useAdventureEditContext } from '../adventureEditProvider';\nimport { useCardStateContext } from '../cardStateProvider';\nimport { fetcher, myThrottle, validateAdventure } from '../utils';\nexport const useGetAdventure = () => {\n  _s();\n\n  const {\n    setCurrentAdventure\n  } = useAdventureEditContext();\n\n  const getAdventure = async _ref => {\n    let {\n      id\n    } = _ref;\n    return fetcher(`/adventures/details?id=${id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setCurrentAdventure(data.adventure);\n      return data;\n    }).catch(console.error);\n  };\n\n  return {\n    getAdventure\n  };\n};\n\n_s(useGetAdventure, \"TR7S0CDy+EtYmddvY9n3WrY6pJI=\", false, function () {\n  return [useAdventureEditContext];\n});\n\nexport const useGetAdventures = () => {\n  _s2();\n\n  const {\n    setAllAdventures\n  } = useAdventureEditContext();\n\n  const getAllAdventures = async boundingBox => {\n    return fetcher('/adventures/all', {\n      method: 'POST',\n      body: {\n        bounding_box: {\n          NE: boundingBox._ne,\n          SW: boundingBox._sw\n        },\n        type: 'line'\n      }\n    }).then(_ref3 => {\n      let {\n        data: {\n          adventures\n        }\n      } = _ref3;\n      setAllAdventures(currAdventures => [...currAdventures, ...adventures]);\n      return adventures;\n    }).catch(console.error);\n  };\n\n  const refetchAdventures = debounce(500, (newStartPosition, boundingBox) => {\n    fetcher('/adventures/all', {\n      method: 'POST',\n      body: {\n        bounding_box: {\n          NE: boundingBox._ne,\n          SW: boundingBox._sw\n        },\n        type: 'line'\n      }\n    }).then(_ref4 => {\n      let {\n        data: {\n          adventures\n        }\n      } = _ref4;\n      setAllAdventures(currAdventures => [...currAdventures, ...adventures]);\n      return adventures;\n    }).catch(console.error);\n  });\n  return {\n    getAllAdventures,\n    refetchAdventures\n  };\n};\n\n_s2(useGetAdventures, \"iH6r/dspYB0hRAVkqLTKBu4lHbQ=\", false, function () {\n  return [useAdventureEditContext];\n});\n\nexport const useSaveAdventure = () => {\n  _s3();\n\n  const {\n    setAllAdventures,\n    currentAdventure,\n    setAdventureError,\n    setIsEditable,\n    setCurrentAdventure\n  } = useAdventureEditContext();\n  const {\n    closeCard\n  } = useCardStateContext();\n\n  const saveNewAdventure = () => {\n    return fetcher(`/adventures/create`, {\n      method: 'POST',\n      body: currentAdventure\n    }).then(_ref5 => {\n      let {\n        data\n      } = _ref5;\n      setAllAdventures(currAdventures => {\n        currAdventures = currAdventures.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== 'waiting';\n        });\n        return [...currAdventures, data.adventure];\n      });\n      closeCard();\n    }).catch(error => {\n      console.error(error);\n      setAdventureError(error.toString().replace('Error: ', ''));\n      return error;\n    });\n  };\n\n  const startAdventureSaveProcess = () => {\n    try {\n      const validatedAdventure = validateAdventure(currentAdventure, setAdventureError);\n      setCurrentAdventure(validatedAdventure);\n      setIsEditable(false);\n      return validatedAdventure;\n    } catch (error) {\n      console.error(error);\n      setAdventureError(error.toString().replace('Error: ', ''));\n    }\n  };\n\n  return {\n    saveNewAdventure,\n    startAdventureSaveProcess\n  };\n};\n\n_s3(useSaveAdventure, \"AQ/tq0HyYlc4JUolRxx3bsBzda8=\", false, function () {\n  return [useAdventureEditContext, useCardStateContext];\n});\n\nexport const useDeleteAdventure = () => {\n  _s4();\n\n  const {\n    setAllAdventures\n  } = useAdventureEditContext();\n\n  const deleteAdventure = _ref7 => {\n    let {\n      adventureId\n    } = _ref7;\n    return fetcher(`/adventures/delete?adventure_id=${adventureId}`, {\n      method: 'DELETE'\n    }).then(() => setAllAdventures([])).catch(console.error);\n  };\n\n  return {\n    deleteAdventure\n  };\n};\n\n_s4(useDeleteAdventure, \"iH6r/dspYB0hRAVkqLTKBu4lHbQ=\", false, function () {\n  return [useAdventureEditContext];\n});\n\nexport const useSubmitAdventurePicture = () => {\n  _s5();\n\n  const {\n    getAdventure\n  } = useGetAdventure();\n\n  const submitAdventurePicture = _ref8 => {\n    let {\n      data,\n      adventureId\n    } = _ref8;\n    const formData = new FormData();\n    formData.append('image', data);\n    return fetcher(`/pictures/adventureUpload?adventure_id=${adventureId}`, {\n      method: 'POST',\n      headers: [{\n        name: 'content-type',\n        value: 'none'\n      }],\n      body: formData\n    }).then(() => getAdventure({\n      id: adventureId\n    })).catch(console.error);\n  };\n\n  return {\n    submitAdventurePicture\n  };\n};\n\n_s5(useSubmitAdventurePicture, \"c5zskRPPZfjs0nqOL2b8eSjKnPE=\", false, function () {\n  return [useGetAdventure];\n});","map":{"version":3,"names":["debounce","throttle","useAdventureEditContext","useCardStateContext","fetcher","myThrottle","validateAdventure","useGetAdventure","setCurrentAdventure","getAdventure","id","then","data","adventure","catch","console","error","useGetAdventures","setAllAdventures","getAllAdventures","boundingBox","method","body","bounding_box","NE","_ne","SW","_sw","type","adventures","currAdventures","refetchAdventures","newStartPosition","useSaveAdventure","currentAdventure","setAdventureError","setIsEditable","closeCard","saveNewAdventure","filter","toString","replace","startAdventureSaveProcess","validatedAdventure","useDeleteAdventure","deleteAdventure","adventureId","useSubmitAdventurePicture","submitAdventurePicture","formData","FormData","append","headers","name","value"],"sources":["/Users/andrewmaclean/BackyardFriends/mountains/src/Providers/hooks/adventures.js"],"sourcesContent":["import { debounce, throttle } from 'throttle-debounce'\n\nimport { useAdventureEditContext } from '../adventureEditProvider'\nimport { useCardStateContext } from '../cardStateProvider'\nimport { fetcher, myThrottle, validateAdventure } from '../utils'\n\nexport const useGetAdventure = () => {\n\tconst { setCurrentAdventure } = useAdventureEditContext()\n\n\tconst getAdventure = async ({ id }) => {\n\t\treturn fetcher(`/adventures/details?id=${id}`)\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetCurrentAdventure(data.adventure)\n\n\t\t\t\treturn data\n\t\t\t})\n\t\t\t.catch(console.error)\n\t}\n\n\treturn { getAdventure }\n}\n\nexport const useGetAdventures = () => {\n\tconst { setAllAdventures } = useAdventureEditContext()\n\n\tconst getAllAdventures = async (boundingBox) => {\n\t\treturn fetcher('/adventures/all', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: {\n\t\t\t\tbounding_box: {\n\t\t\t\t\tNE: boundingBox._ne,\n\t\t\t\t\tSW: boundingBox._sw\n\t\t\t\t},\n\t\t\t\ttype: 'line'\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data: { adventures } }) => {\n\t\t\t\tsetAllAdventures((currAdventures) => [...currAdventures, ...adventures])\n\n\t\t\t\treturn adventures\n\t\t\t})\n\t\t\t.catch(console.error)\n\t}\n\n\tconst refetchAdventures = debounce(500, (newStartPosition, boundingBox) => {\n\t\tfetcher('/adventures/all', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: {\n\t\t\t\tbounding_box: {\n\t\t\t\t\tNE: boundingBox._ne,\n\t\t\t\t\tSW: boundingBox._sw\n\t\t\t\t},\n\t\t\t\ttype: 'line'\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data: { adventures } }) => {\n\t\t\t\tsetAllAdventures((currAdventures) => [...currAdventures, ...adventures])\n\n\t\t\t\treturn adventures\n\t\t\t})\n\t\t\t.catch(console.error)\n\t})\n\n\treturn { getAllAdventures, refetchAdventures }\n}\n\nexport const useSaveAdventure = () => {\n\tconst {\n\t\tsetAllAdventures,\n\t\tcurrentAdventure,\n\t\tsetAdventureError,\n\t\tsetIsEditable,\n\t\tsetCurrentAdventure\n\t} = useAdventureEditContext()\n\n\tconst { closeCard } = useCardStateContext()\n\n\tconst saveNewAdventure = () => {\n\t\treturn fetcher(`/adventures/create`, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: currentAdventure\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetAllAdventures((currAdventures) => {\n\t\t\t\t\tcurrAdventures = currAdventures.filter(({ id }) => id !== 'waiting')\n\n\t\t\t\t\treturn [...currAdventures, data.adventure]\n\t\t\t\t})\n\n\t\t\t\tcloseCard()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error)\n\t\t\t\tsetAdventureError(error.toString().replace('Error: ', ''))\n\n\t\t\t\treturn error\n\t\t\t})\n\t}\n\n\tconst startAdventureSaveProcess = () => {\n\t\ttry {\n\t\t\tconst validatedAdventure = validateAdventure(currentAdventure, setAdventureError)\n\t\t\tsetCurrentAdventure(validatedAdventure)\n\t\t\tsetIsEditable(false)\n\n\t\t\treturn validatedAdventure\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetAdventureError(error.toString().replace('Error: ', ''))\n\t\t}\n\t}\n\n\treturn {\n\t\tsaveNewAdventure,\n\t\tstartAdventureSaveProcess\n\t}\n}\n\nexport const useDeleteAdventure = () => {\n\tconst { setAllAdventures } = useAdventureEditContext()\n\n\tconst deleteAdventure = ({ adventureId }) => {\n\t\treturn fetcher(`/adventures/delete?adventure_id=${adventureId}`, { method: 'DELETE' })\n\t\t\t.then(() => setAllAdventures([]))\n\t\t\t.catch(console.error)\n\t}\n\n\treturn {\n\t\tdeleteAdventure\n\t}\n}\n\nexport const useSubmitAdventurePicture = () => {\n\tconst { getAdventure } = useGetAdventure()\n\n\tconst submitAdventurePicture = ({ data, adventureId }) => {\n\t\tconst formData = new FormData()\n\t\tformData.append('image', data)\n\n\t\treturn fetcher(`/pictures/adventureUpload?adventure_id=${adventureId}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: [{ name: 'content-type', value: 'none' }],\n\t\t\tbody: formData\n\t\t})\n\t\t\t.then(() => getAdventure({ id: adventureId }))\n\t\t\t.catch(console.error)\n\t}\n\n\treturn { submitAdventurePicture }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}