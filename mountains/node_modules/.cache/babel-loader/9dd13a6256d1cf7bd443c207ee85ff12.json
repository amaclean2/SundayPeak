{"ast":null,"code":"var _jsxFileName = \"/Users/andrewmaclean/BackyardFriends/mountains/src/Components/AdventureEditor/Buttons.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useAdventureEditContext, useCardStateContext, useGetAdventures, useSaveActivity, useSaveAdventure, useSaveTick } from \"../../Providers\";\nimport { Button, FooterButtons } from \"../Reusable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdventureEditorButtons = () => {\n  _s();\n\n  const {\n    currentAdventure,\n    adventureAddState,\n    isEditable,\n    setAdventureAddState,\n    setIsEditable,\n    setCurrentAdventure\n  } = useAdventureEditContext();\n  const {\n    saveTick\n  } = useSaveTick();\n  const {\n    saveActivity\n  } = useSaveActivity();\n  const {\n    saveNewAdventure,\n    startAdventureSaveProcess\n  } = useSaveAdventure();\n  const {\n    refetchAdventures\n  } = useGetAdventures();\n  const {\n    closeCard\n  } = useCardStateContext();\n  const [saveState, setSaveState] = useState(0);\n\n  const addTick = async () => saveTick({\n    adventureId: currentAdventure.id\n  });\n\n  const addActivity = async () => saveActivity({\n    adventureId: currentAdventure.id\n  });\n\n  const saveAdventure = async () => {\n    if (saveState === 0) {\n      const {\n        error: saveAdventureError\n      } = await startAdventureSaveProcess();\n\n      if (!saveAdventureError) {\n        setSaveState(1);\n      }\n    } else if (saveState === 1) {\n      saveNewAdventure().then(() => {\n        refetchAdventures();\n        setSaveState(0);\n        setCurrentAdventure(null);\n      });\n    }\n  };\n\n  const cancelSave = () => {\n    refetchAdventures();\n    setIsEditable(false);\n\n    if (!currentAdventure.id) {\n      closeCard();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FooterButtons, {\n    children: [!currentAdventure && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setAdventureAddState(true),\n      disabled: adventureAddState,\n      className: \"adventure-add-button\",\n      children: \"Add New Adventure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), currentAdventure && !isEditable && saveState === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsEditable(true),\n        className: \"adventure-edit-button\",\n        id: \"adventure-edit-button\",\n        children: \"Edit Adventure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"adventure-tick-button\",\n        id: \"adventure-tick-button\",\n        onClick: addTick,\n        children: \"Add to Ticklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"adventure-tick-button\",\n        id: \"adventure-tick-button\",\n        onClick: addActivity,\n        children: \"Complete Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), currentAdventure && (isEditable || saveState === 1) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: saveAdventure,\n        className: \"adventure-edit-button\",\n        children: saveState === 0 ? 'Preview Save' : 'Finish Saving'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), saveState === 1 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsEditable(true),\n        className: \"adventure-edit-button\",\n        id: \"adventure-edit-button\",\n        children: \"Edit Adventure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: cancelSave,\n        className: \"adventure-edit-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdventureEditorButtons, \"GD9dmBgRJesJ7lgCx2ghYg2Jzfc=\", false, function () {\n  return [useAdventureEditContext, useSaveTick, useSaveActivity, useSaveAdventure, useGetAdventures, useCardStateContext];\n});\n\n_c = AdventureEditorButtons;\nexport default AdventureEditorButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdventureEditorButtons\");","map":{"version":3,"names":["useState","useAdventureEditContext","useCardStateContext","useGetAdventures","useSaveActivity","useSaveAdventure","useSaveTick","Button","FooterButtons","AdventureEditorButtons","currentAdventure","adventureAddState","isEditable","setAdventureAddState","setIsEditable","setCurrentAdventure","saveTick","saveActivity","saveNewAdventure","startAdventureSaveProcess","refetchAdventures","closeCard","saveState","setSaveState","addTick","adventureId","id","addActivity","saveAdventure","error","saveAdventureError","then","cancelSave"],"sources":["/Users/andrewmaclean/BackyardFriends/mountains/src/Components/AdventureEditor/Buttons.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n    useAdventureEditContext,\n    useCardStateContext,\n    useGetAdventures,\n    useSaveActivity,\n    useSaveAdventure,\n    useSaveTick\n} from \"../../Providers\";\nimport { Button, FooterButtons } from \"../Reusable\";\n\nconst AdventureEditorButtons = () => {\n    const {\n        currentAdventure,\n        adventureAddState,\n        isEditable,\n        setAdventureAddState,\n        setIsEditable,\n        setCurrentAdventure\n    } = useAdventureEditContext();\n    const { saveTick } = useSaveTick();\n    const { saveActivity } = useSaveActivity();\n    const { saveNewAdventure, startAdventureSaveProcess } = useSaveAdventure();\n    const { refetchAdventures } = useGetAdventures();\n    const { closeCard } = useCardStateContext();\n\n    const [saveState, setSaveState] = useState(0);\n\n    const addTick = async () => saveTick({ adventureId: currentAdventure.id });\n    const addActivity = async () => saveActivity({ adventureId: currentAdventure.id });\n\n    const saveAdventure = async () => {\n\n\t\tif (saveState === 0) {\n\t\t\tconst { error: saveAdventureError } = await startAdventureSaveProcess();\n\n\t\t\tif (!saveAdventureError) {\n\t\t\t\tsetSaveState(1);\n\t\t\t}\n\n\t\t} else if (saveState === 1) {\n\t\t\tsaveNewAdventure()\n\t\t\t\t.then(() => {\n\t\t\t\t\trefetchAdventures();\n\t\t\t\t\tsetSaveState(0);\n\t\t\t\t\tsetCurrentAdventure(null);\n\t\t\t\t});\n\t\t}\n\t};\n\n    const cancelSave = () => {\n\t\trefetchAdventures();\n        setIsEditable(false);\n        if (!currentAdventure.id) {\n            closeCard();\n        }\n\t};\n\n    return (\n        <FooterButtons>\n            {!currentAdventure && (\n                <Button\n                    onClick={() => setAdventureAddState(true)}\n                    disabled={adventureAddState}\n                    className=\"adventure-add-button\"\n                >\n                    Add New Adventure\n                </Button>\n            )}\n            {currentAdventure && !isEditable && saveState === 0 && (\n                <>\n                    <Button\n                        onClick={() => setIsEditable(true)}\n                        className=\"adventure-edit-button\"\n                        id=\"adventure-edit-button\"\n                    >\n                        Edit Adventure\n                    </Button>\n                    <Button\n                        className=\"adventure-tick-button\"\n                        id=\"adventure-tick-button\"\n                        onClick={addTick}\n                    >\n                        Add to Ticklist\n                    </Button>\n                    <Button\n                        className=\"adventure-tick-button\"\n                        id=\"adventure-tick-button\"\n                        onClick={addActivity}\n                    >\n                        Complete Activity\n                    </Button>\n                </>\n            )}\n            {currentAdventure && (isEditable || saveState === 1) && (\n                <>\n                    <Button\n                        onClick={saveAdventure}\n                        className=\"adventure-edit-button\"\n                    >\n                        {(saveState === 0) ? 'Preview Save' : 'Finish Saving'}\n                    </Button>\n                    {saveState === 1 && <Button\n                        onClick={() => setIsEditable(true)}\n                        className=\"adventure-edit-button\"\n                        id=\"adventure-edit-button\"\n                    >\n                        Edit Adventure\n                    </Button>}\n                    <Button\n                        onClick={cancelSave}\n                        className=\"adventure-edit-button\"\n                    >\n                        Cancel\n                    </Button>\n                </>\n            )}\n        </FooterButtons>\n    );\n};\n\nexport default AdventureEditorButtons;"],"mappings":"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"},"metadata":{},"sourceType":"module"}