{"ast":null,"code":"var _jsxFileName = \"/Users/andrewmaclean/BackyardFriends/mountains/src/Components/Reusable/FormField/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { Button } from '../Button';\nimport PasswordInputField from './PasswordInputField';\nimport './styles.css';\nimport CheckboxField from './CheckboxField';\nimport SelectManyField from './SelectManyField';\nimport RangeInputField from './RangeInputField';\nimport TextareaField from './TextareaField';\nimport StaticField from './StaticField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FormField = _ref => {\n  _s();\n\n  let {\n    id,\n    type = 'text',\n    name = '',\n    label = '',\n    value = '',\n    isEditable = false,\n    className = '',\n    hideLabel = false,\n    autoComplete = 'off',\n    fullWidth = false,\n    block = false,\n    options = {},\n    onChange = () => {}\n  } = _ref;\n  const [workingValue, setWorkingValue] = useState(value);\n\n  const handleChange = e => {\n    onChange(e);\n    setWorkingValue(e.target.value);\n  };\n\n  const inputBox = () => {\n    switch (type) {\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(PasswordInputField, {\n          className: className,\n          name: name,\n          label: label,\n          hideLabel: hideLabel,\n          value: workingValue,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 12\n        }, this);\n\n      case 'selectMany':\n        return /*#__PURE__*/_jsxDEV(SelectManyField, {\n          className: className,\n          options: options,\n          onChange: handleChange,\n          name: name,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this);\n\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(RangeInputField, {\n          className: className,\n          name: name,\n          value: workingValue,\n          options: options,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this);\n\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(TextareaField, {\n          className: className,\n          hideLabel: hideLabel,\n          label: label,\n          name: name,\n          onChange: handleChange,\n          value: workingValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          className: cx(type, 'form-field', className),\n          type: type,\n          name: name,\n          id: name,\n          autoComplete: autoComplete,\n          placeholder: hideLabel ? label : '',\n          value: workingValue,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this);\n    }\n  };\n\n  const nonCheckboxField = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!hideLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: cx(type, className, 'label-field'),\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), isEditable && inputBox()]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id || name,\n    className: cx('form-field-container', fullWidth && 'wide', block && 'block', !isEditable && 'static'),\n    children: [isEditable && type === 'checkbox' ? /*#__PURE__*/_jsxDEV(CheckboxField, {\n      className: className,\n      name: name,\n      value: workingValue,\n      onChange: handleChange,\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this) : nonCheckboxField(), !isEditable && /*#__PURE__*/_jsxDEV(StaticField, {\n      value: workingValue,\n      type: type,\n      className: className,\n      options: options,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormField, \"0cJ+oqDzeotuoO/NAbLyxQXcHqM=\");\n\n_c = FormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"names":["React","useEffect","useState","cx","Button","PasswordInputField","CheckboxField","SelectManyField","RangeInputField","TextareaField","StaticField","FormField","id","type","name","label","value","isEditable","className","hideLabel","autoComplete","fullWidth","block","options","onChange","workingValue","setWorkingValue","handleChange","e","target","inputBox","nonCheckboxField"],"sources":["/Users/andrewmaclean/BackyardFriends/mountains/src/Components/Reusable/FormField/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { Button } from '../Button';\nimport PasswordInputField from './PasswordInputField';\n\nimport './styles.css';\nimport CheckboxField from './CheckboxField';\nimport SelectManyField from './SelectManyField';\nimport RangeInputField from './RangeInputField';\nimport TextareaField from './TextareaField';\nimport StaticField from './StaticField';\n\nexport const FormField = ({\n\tid,\n\ttype = 'text',\n\tname = '',\n\tlabel = '',\n\tvalue = '',\n\tisEditable = false,\n\tclassName = '',\n\thideLabel = false,\n\tautoComplete = 'off',\n\tfullWidth = false,\n\tblock = false,\n\toptions = {},\n\tonChange = () => { }\n}) => {\n\tconst [workingValue, setWorkingValue] = useState(value);\n\n\tconst handleChange = (e) => {\n\t\tonChange(e);\n\t\tsetWorkingValue(e.target.value);\n\t};\n\n\tconst inputBox = () => {\n\t\tswitch (type) {\n\t\t\tcase 'password':\n\t\t\t\treturn <PasswordInputField\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tname={name}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\thideLabel={hideLabel}\n\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>;\n\t\t\tcase 'selectMany':\n\t\t\t\treturn (\n\t\t\t\t\t<SelectManyField\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 'range':\n\t\t\t\treturn (\n\t\t\t\t\t<RangeInputField\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 'textarea':\n\t\t\t\treturn (\n\t\t\t\t\t<TextareaField\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\thideLabel={hideLabel}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={cx(type, 'form-field', className)}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tid={name}\n\t\t\t\t\t\tautoComplete={autoComplete}\n\t\t\t\t\t\tplaceholder={hideLabel ? label : ''}\n\t\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t}\n\t};\n\n\tconst nonCheckboxField = () => (\n\t\t<>\n\t\t\t{!hideLabel && <label htmlFor={name} className={cx(type, className, 'label-field')}>\n\t\t\t\t{label}\n\t\t\t</label>}\n\t\t\t{isEditable && inputBox()}\n\t\t</>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tid={id || name}\n\t\t\tclassName={cx('form-field-container', (fullWidth && 'wide'), (block && 'block'), (!isEditable && 'static'))}\n\t\t>\n\t\t\t{(isEditable && type === 'checkbox') ? (\n\t\t\t\t<CheckboxField\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel={label}\n\t\t\t\t/>) : nonCheckboxField()}\n\t\t\t{!isEditable && (\n\t\t\t\t<StaticField\n\t\t\t\t\tvalue={workingValue}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tname={name}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}